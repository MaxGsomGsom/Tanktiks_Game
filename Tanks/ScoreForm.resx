<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAIAAAD9b0jDAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAAABp0RVh0U29mdHdhcmUAUGFpbnQuTkVUIHYzLjUuMTFH80I3AAAD8klEQVRIS03V
        6W7jMAwEYL//r2Lb3HFuH3Gaq93F7uPtJ09RFGAEihoOR5TkVId9fe5PbXMwHvaby9A97u/vl45xhnPT
        nHb322U4t313shrA8bDd72pZu+26746n4/b5uG43K5h6Pa+Azn3z7++f6/u5a494Pz8ecjhjwmk+e4UT
        AWtOe2Omm3pRrxciy8XE9H4jpZcFUF0u/em4ez5uSCGYgnitqQcUnDQFmCWjFHEj3rY5Ko8RTASyKCUw
        plrywxsogErGJKyWU0GrwH3X6EBzOmzqpRSwj+d9OHfVx/P2uF8jnlhjqIFSIHE9NeXfrheMYzdLB2fT
        X4v5G9V4jaZFKYHQlk2gKQo1ED8Fgomo9WrOlHTC9k7XmDJIoVSlQhotxFqzNXtMZxHxFVOfTBjd4LM4
        577FiNc1AHYqGOCNVdqBmkC60CnAt8zSAZj1asbBZezacgURbTdLhWEYQXgEf38+K1EJiqNLKWbN9HYd
        UDA+Okjs8jny9UpcojuXkoIpX3oqgbToNUpLsqlN2fgoqhxLtmKJUtRZAuMnrgZYNYw3hpe2qp+DUkmm
        iOPWvjRHMSyciADGiOtnIkBlj9mdE+TovRxE1uAcEWr1TDFKixbScMnygvFa1dOIKz21JuTSuiLRhSvm
        Iao8bvbrXWDRMpYuYckx8JUfL8lZvUIq4XhwV8rNwCXiWPe7NY2jv4KTyUbk9vtUCYeRwg9PmluBXoY+
        rYFAzdSwrHLS+IxMG/JBgrQD3yr1BH1fvNdsLtRFqTppsBwhDoPWJplWSWMiTH+Bx+YsCZpOfqHe1B7+
        wSsQL6QaRDBqBb3cNEiykUarqcc4qL8Z0Xmvq2VJB6vX5SGAfZGi41nLhzJdQzqy1+qrZHVsbnlUGAEC
        4/ueIlFJr/AUUgkspNL41tTk2KkxSnGlg1hMgWHQefvEwpgq4xjc0fJBAXK5jKRZ00qOuOeEFJEgc56j
        nEFbcPniuSTYfZmQwvOBWcVjTgOpBXSm+iCCUcToRaFj6mXvaoinS6PYcvM1yj0VKW9fPpAKWpOtQePV
        UJmkjSezUIB5cnFwEShFbrLQKVmU+oXXZnHJR2Sqs5aApE3eXjTUKnPiedBZkpsN2Y3IbPqqG1+nD5TG
        2Ui4QgG9mE/IZHqKAmY+K/8ffKu2DOyc97vN2+uLQ/OPXZTCWcALZPQEQpegkU8OI8RUAXpTjy6XBKNu
        dK235zO4LQdly0ZmyxCeAIcQpiQVRmfttrtD+uDe6BW9dGFXSW7oULfNvhzUT1FGDTXqiR1YAqARL/k/
        d80BcDgUxHJz3LPyd6K4zmbMZgWRYgmFaS5Tro6q8hMBgIRJvNTerv8D0UPigjMZZSwAAAAASUVORK5C
        YII=
</value>
  </data>
</root>